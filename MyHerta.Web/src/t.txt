// 后期处理
const composer = new EffectComposer(renderer)
composer.addPass(new RenderPass(scene, camera))

// 后期处理 - 描边
const outlinePass = new OutlinePass(new THREE.Vector2(document.body.offsetWidth, document.body.offsetHeight), scene, camera)
outlinePass.edgeThickness = 4
outlinePass.visibleEdgeColor.set('hsl(316.17, 50%, 40%)')
outlinePass.hiddenEdgeColor.set('hsl(316.17, 36%, 75%)')
outlinePass.selectedObjects = [hertaModel.scene]
composer.addPass(outlinePass)

composer.addPass(new OutputPass())


// 监听：鼠标是否在黑塔上，并添加描边
let isHoveringHerta = false
let mousePos = new THREE.Vector2()
const raycaster = new THREE.Raycaster()
let targetEdgeStrength = 0.0
let targetEdgeGlow = 0.0

const checkMouse = debounce(event => {
  const isHoveringHertaNow = checkRaycast(raycaster, hertaModel.scene, mousePos, scene, camera) 

  if (isHoveringHertaNow != isHoveringHerta) {
    targetEdgeStrength = isHoveringHertaNow? 3.0: 0.0
    targetEdgeGlow = isHoveringHertaNow? 1.0: 0.0
    isHoveringHerta = isHoveringHertaNow
    threeCanvas.className = isHoveringHertaNow? "clickable" : ""
  }

}, 100)